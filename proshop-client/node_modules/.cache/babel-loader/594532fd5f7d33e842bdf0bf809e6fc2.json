{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport cartReducer from './reducers/cartReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst middleware = [thunk];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: 'PayPal'\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/mazenswar/mazDev/proShop/proshop-client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userDeleteReducer","userDetailsReducer","userListReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","middleware","initialState","cartItems","shippingAddress","paymentMethod","userInfo","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,eAAhD,EAAiEC,gBAAjE,EAAmFC,mBAAnF,EAAwGC,wBAAxG,QAAwI,yBAAxI;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,kBAAlD,EAAsEC,eAAtE,QAA6F,0BAA7F;AAEA,MAAMC,OAAO,GAAGjB,eAAe,CAAC;AAC5BkB,EAAAA,WAAW,EAAEd,kBADe;AAE5Be,EAAAA,cAAc,EAAEd,qBAFY;AAG5Be,EAAAA,IAAI,EAAEd,WAHsB;AAI5Be,EAAAA,SAAS,EAAEX,gBAJiB;AAK5BY,EAAAA,YAAY,EAAEX,mBALc;AAM5BY,EAAAA,WAAW,EAAEf,kBANe;AAO5BgB,EAAAA,iBAAiB,EAAEZ,wBAPS;AAQ5Ba,EAAAA,QAAQ,EAAEhB,eARkB;AAS5BiB,EAAAA,UAAU,EAAEnB,iBATgB;AAU5BoB,EAAAA,WAAW,EAAEd,kBAVe;AAW5Be,EAAAA,YAAY,EAAEd,mBAXc;AAY5Be,EAAAA,QAAQ,EAAEb,eAZkB;AAa5Bc,EAAAA,WAAW,EAAGf;AAbc,CAAD,CAA/B;AAgBA,MAAMgB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAnI;AAGA,MAAMK,UAAU,GAAG,CAACpC,KAAD,CAAnB;AAEA,MAAMqC,YAAY,GAAG;AACjBnB,EAAAA,IAAI,EAAG;AACHoB,IAAAA,SAAS,EAAET,oBADR;AAEHU,IAAAA,eAAe,EAAEJ,0BAFd;AAGHK,IAAAA,aAAa,EAAE;AAHZ,GADU;AAMjBrB,EAAAA,SAAS,EAAE;AAAEsB,IAAAA,QAAQ,EAAEP;AAAZ;AANM,CAArB;AASA,MAAMQ,KAAK,GAAG7C,WAAW,CACrBkB,OADqB,EAErBsB,YAFqB,EAGrBpC,mBAAmB,CAACF,eAAe,CAAC,GAAGqC,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeM,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, } from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport cartReducer from './reducers/cartReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from './reducers/orderReducers';\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy:  orderListMyReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\n\nconst middleware = [thunk];\n\nconst initialState = {\n    cart : { \n        cartItems: cartItemsFromStorage, \n        shippingAddress: shippingAddressFromStorage,\n        paymentMethod: 'PayPal'\n    },\n    userLogin: { userInfo: userInfoFromStorage }\n};\n\nconst store = createStore(\n    reducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}