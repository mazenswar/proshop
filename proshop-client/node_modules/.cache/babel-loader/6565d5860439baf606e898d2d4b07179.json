{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    const {\n      userInfo: {\n        token\n      }\n    } = getState().userLogin;\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/orders', order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = orderId => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        token\n      }\n    } = getState().userLogin;\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/orders/${orderId}`, config);\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/mazenswar/mazDev/proShop/proshop-client/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_REQUEST","createOrder","order","dispatch","getState","userInfo","token","userLogin","type","config","headers","Authorization","data","post","payload","error","response","message","getOrderDetails","orderId","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,EAAwEC,qBAAxE,QAAqG,6BAArG;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AACjE,MAAI;AACF,UAAM;AAACC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA;AAAF;AAAX,QAAwBF,QAAQ,GAAGG,SAAzC;AACAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACA,UAAMW,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AAAE,wBAAgB,kBAAlB;AAAsCC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAArE;AADI,KAAf;AAGA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACiB,IAAN,CAAW,SAAX,EAAsBX,KAAtB,EAA6BO,MAA7B,CAAvB;AACAN,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAET,oBAAR;AAA8Be,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACD,GARD,CAQE,OAAOG,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX,iBADC;AAEPiB,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFtF,KAAD,CAAR;AAID;AACF,CAfM;AAiBP,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAAa,OAAMhB,QAAN,EAAgBC,QAAhB,KAA6B;AACvE,MAAI;AACF,UAAM;AAAEG,MAAAA,SAAS,EAAC;AAACD,QAAAA;AAAD;AAAZ,QAAwBF,QAAQ,GAAGG,SAAzC;AAEAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAMS,MAAM,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAC,wBAAgB,kBAAjB;AAAqCC,QAAAA,aAAa,EAAG,UAASL,KAAM;AAApE;AAAX,KAAf;AAEA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACwB,GAAN,CAAW,WAAUD,OAAQ,EAA7B,EAAgCV,MAAhC,CAAvB;AACD,GARD,CAQE,OAAOM,KAAP,EAAc,CAEf;AACF,CAZM","sourcesContent":["import axios from 'axios'\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_REQUEST } from \"../constants/orderConstants\"\n\nexport const createOrder = (order) => async(dispatch, getState) => {\n  try {\n    const {userInfo: { token }} = getState().userLogin\n    dispatch({ type: ORDER_CREATE_REQUEST })\n    const config = {\n      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}`}\n    }\n    const { data } = await axios.post('/orders', order, config)\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({ \n      type: ORDER_CREATE_FAIL, \n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \n    })\n  }\n}\n\nexport const getOrderDetails = (orderId) => async(dispatch, getState) => {\n  try {\n    const { userLogin:{token} } = getState().userLogin\n\n    dispatch({ type: ORDER_DETAILS_REQUEST })\n\n    const config = { headers: {'Content-Type': 'application/json', Authorization: `Bearer ${token}`}}\n\n    const { data } = await axios.get(`/orders/${orderId}`, config);\n  } catch (error) {\n    \n  }\n}"]},"metadata":{},"sourceType":"module"}