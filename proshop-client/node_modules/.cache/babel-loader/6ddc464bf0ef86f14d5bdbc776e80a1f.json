{"ast":null,"code":"var _jsxFileName = \"/Users/mazenswar/mazDev/proShop/proshop-client/src/screens/PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Col } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PaymentScreen({\n  history\n}) {\n  _s();\n\n  const {\n    shippingAddress\n  } = useSelector(state => state.cart);\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!shippingAddress) {\n      history.push('/shipping');\n    }\n  }, [history, shippingAddress]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod)); // dispatch()\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"PayPal or Credit Card\",\n            name: \"paymentMethod\",\n            value: \"PayPal\",\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Stripe\",\n            name: \"paymentMethod\",\n            value: \"Stripe\",\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentScreen, \"xVTZy7+axNa8KYWeSWTUsdoQLv8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["/Users/mazenswar/mazDev/proShop/proshop-client/src/screens/PaymentScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Button","Form","Col","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","shippingAddress","state","cart","paymentMethod","setPaymentMethod","dispatch","push","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;;AAIA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAsBT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAvC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,QAAD,CAAlD;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAG,CAACY,eAAJ,EAAqB;AACnBD,MAAAA,OAAO,CAACO,IAAR,CAAa,WAAb;AACD;AACF,GAJQ,EAIN,CAACP,OAAD,EAAUC,eAAV,CAJM,CAAT;;AAMA,QAAMO,aAAa,GAAGC,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAACR,iBAAiB,CAACM,aAAD,CAAlB,CAAR,CAFyB,CAGzB;AACD,GAJD;;AAMA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEI,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,KAAK,EAAC,uBAFR;AAGE,YAAA,IAAI,EAAC,eAHP;AAIE,YAAA,KAAK,EAAC,QAJR;AAKE,YAAA,QAAQ,EAAEC,CAAC,IAAIJ,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAQM,QAAC,IAAD,CAAM,KAAN;AACF,YAAA,IAAI,EAAC,OADH;AAEF,YAAA,KAAK,EAAC,QAFJ;AAGF,YAAA,IAAI,EAAC,eAHH;AAIF,YAAA,KAAK,EAAC,QAJJ;AAKF,YAAA,QAAQ,EAAEH,CAAC,IAAIJ,gBAAgB,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,kBARN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA9CQb,a;UACqBP,W,EAEXD,W;;;KAHVQ,a;AAgDT,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Col } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\n\n\n\nfunction PaymentScreen({ history }) {\n  const { shippingAddress } = useSelector(state => state.cart);\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n  const dispatch = useDispatch();\n  \n  useEffect(()=>{\n    if(!shippingAddress) {\n      history.push('/shipping')\n    }\n  }, [history, shippingAddress])\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod))\n    // dispatch()\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check \n              type=\"radio\" \n              label=\"PayPal or Credit Card\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              onChange={e => setPaymentMethod(e.target.value)}\n              ></Form.Check>\n                <Form.Check \n              type=\"radio\" \n              label=\"Stripe\"\n              name=\"paymentMethod\"\n              value=\"Stripe\"\n              onChange={e => setPaymentMethod(e.target.value)}\n              ></Form.Check>\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}