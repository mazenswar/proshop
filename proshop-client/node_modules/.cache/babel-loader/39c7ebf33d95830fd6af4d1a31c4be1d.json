{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\n\nconst cartReducer = (state = {\n  cartItems: []\n}, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case CART_ADD_ITEM:\n      const item = payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        const newQty = item.qty + existItem.qty > existItem.countInStock ? existItem.countInStock : item.qty + existItem.qty;\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? { ...item,\n            qty: newQty\n          } : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/mazenswar/mazDev/proShop/proshop-client/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","type","payload","item","existItem","find","x","product","newQty","qty","countInStock","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAA+C,4BAA/C;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA2B;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAA3B,KAA+C;AACjE,UAAOD,IAAP;AACE,SAAKL,aAAL;AACE,YAAMO,IAAI,GAAGD,OAAb;AACA,YAAME,SAAS,GAAGL,KAAK,CAACC,SAAN,CAAgBK,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcJ,IAAI,CAACI,OAA7C,CAAlB;;AACA,UAAGH,SAAH,EAAc;AACZ,cAAMI,MAAM,GAAGL,IAAI,CAACM,GAAL,GAAWL,SAAS,CAACK,GAArB,GAA2BL,SAAS,CAACM,YAArC,GAAoDN,SAAS,CAACM,YAA9D,GAA6EP,IAAI,CAACM,GAAL,GAAWL,SAAS,CAACK,GAAjH;AACA,eAAO,EAAC,GAAGV,KAAJ;AAAWC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAoBL,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkC,EAAC,GAAGJ,IAAJ;AAAUM,YAAAA,GAAG,EAAED;AAAf,WAAlC,GAA2DF,CAApF;AAAtB,SAAP;AACD,OAHD,MAGO;AACL,eAAO,EAAC,GAAGP,KAAJ;AAAWC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAtB,SAAP;AACD;;AACH,SAAKN,gBAAL;AACE,aAAO,EACL,GAAGE,KADE;AACKC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAuBN,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,OAA1C;AADhB,OAAP;;AAGF;AACE,aAAOH,KAAP;AAfJ;AAiBD,CAlBD;;AAqBA,eAAeD,WAAf","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM} from '../constants/cartConstants';\n\nconst cartReducer = (state = { cartItems: []}, {type, payload}) => {\n  switch(type) {\n    case CART_ADD_ITEM:\n      const item = payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n      if(existItem) {\n        const newQty = item.qty + existItem.qty > existItem.countInStock ? existItem.countInStock : item.qty + existItem.qty\n        return {...state, cartItems: state.cartItems.map(x => x.product === existItem.product ? {...item, qty: newQty} : x)}\n      } else {\n        return {...state, cartItems: [...state.cartItems, item]}\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state, cartItems: state.cartItems.filter(x => x.product !== payload)\n      };\n    default:\n      return state\n  }\n}\n\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}