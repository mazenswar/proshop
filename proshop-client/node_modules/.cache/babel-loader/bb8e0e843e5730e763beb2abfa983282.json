{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport cartReducer from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst middleware = [thunk];\nconst initialState = {\n  cartItems: {\n    cart: []\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/mazenswar/mazDev/proShop/proshop-client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","middleware","initialState","cartItems","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAEJ,kBADe;AAE5BK,EAAAA,cAAc,EAAEJ,qBAFY;AAG5BK,EAAAA,IAAI,EAAEJ;AAHsB,CAAD,CAA/B;AAMA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAEA,MAAMG,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAG;AAAER,IAAAA,IAAI,EAAE;AAAR;AADK,CAArB;AAIA,MAAMS,KAAK,GAAGpB,WAAW,CACrBQ,OADqB,EAErBU,YAFqB,EAGrBd,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeG,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, } from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport cartReducer from './reducers/cartReducers';\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst middleware = [thunk];\n\nconst initialState = {\n    cartItems : { cart: []}\n};\n\nconst store = createStore(\n    reducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}