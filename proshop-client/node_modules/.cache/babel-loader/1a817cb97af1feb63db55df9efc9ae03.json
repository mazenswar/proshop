{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    const {\n      userInfo: {\n        token\n      }\n    } = getState().userLogin;\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/orders', order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = orderId => async (dispatch, getState) => {\n  try {\n    const {\n      userInfo: {\n        token\n      }\n    } = getState().userLogin;\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/orders/${orderId}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userInfo: {\n        token\n      }\n    } = getState().userLogin;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/orders/${orderId}/pay`, paymentResult, config);\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mazenswar/mazDev/proShop/proshop-client/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","createOrder","order","dispatch","getState","userInfo","token","userLogin","type","config","headers","Authorization","data","post","payload","error","response","message","getOrderDetails","orderId","get","payOrder","paymentResult","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST } from \"../constants/orderConstants\"\n\nexport const createOrder = (order) => async(dispatch, getState) => {\n  try {\n    const {userInfo: { token }} = getState().userLogin\n    dispatch({ type: ORDER_CREATE_REQUEST })\n    const config = {\n      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}`}\n    }\n    const { data } = await axios.post('/orders', order, config)\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({ \n      type: ORDER_CREATE_FAIL, \n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \n    })\n  }\n}\n\nexport const getOrderDetails = (orderId) => async(dispatch, getState) => {\n  try {\n    const { userInfo:{token} } = getState().userLogin\n\n    dispatch({ type: ORDER_DETAILS_REQUEST })\n\n    const config = { headers: {'Content-Type': 'application/json', Authorization: `Bearer ${token}`}}\n\n    const { data } = await axios.get(`/orders/${orderId}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    })\n    \n\n  } catch (error) {\n    \n    dispatch({ \n      type: ORDER_DETAILS_FAIL, \n      payload: error.response && error.response.data.message ? error.response.data.message : error.message \n    })\n\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async(dispatch, getState) => {\n\n  try {\n    dispatch({ type: ORDER_PAY_REQUEST })\n    const { userInfo: {token} } = getState().userLogin;\n    const config = {\n      headers: { \n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n        }\n    }\n    const { data } = await axios.put(`/orders/${orderId}/pay`, paymentResult, config);\n\n\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}