{"ast":null,"code":"import axios from 'axios';\nimport { USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from '../constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n}; ///// REGISTER\n\nexport const registerUser = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getuserDetails = id => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: USER_DETAIL_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/users/${id}`, config);\n    dispatch({\n      type: USER_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAIL_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/users/profile', user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      token\n    } = getState().userLogin;\n    const config = {\n      headers: {\n        'Content-Type': 'appliation/json',\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/users', config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mazenswar/mazDev/proShop/proshop-client/src/actions/userActions.js"],"names":["axios","USER_DETAIL_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","err","response","message","logout","removeItem","registerUser","name","getuserDetails","id","getState","userLogin","userInfo","Authorization","token","get","error","updateUserProfile","user","put","getUsers"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport { USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from '../constants/userConstants';\n\nexport const login = (email, password) => async(dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = { headers: {'Content-Type': 'application/json'} };\n\n    const { data } = await axios.post('/users/login', {email, password}, config);\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    \n  } catch (err) {\n\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    })\n\n  }\n}\n\nexport const logout = () => async(dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n}\n\n///// REGISTER\n\nexport const registerUser = (name, email, password) => async(dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = { headers: {'Content-Type': 'application/json'} };\n\n    const { data } = await axios.post('/users', {name, email, password}, config);\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    \n  } catch (err) {\n\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    })\n\n  }\n}\n\nexport const getuserDetails = (id) => async(dispatch, getState) => {\n  try {\n    const {userLogin: { userInfo } } = getState()\n\n    dispatch({ type: USER_DETAIL_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/users/${id}`, config);\n\n    dispatch({ \n      type: USER_DETAIL_SUCCESS,\n      payload: data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: USER_DETAIL_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\n  try {\n    const {userLogin: {userInfo}} = getState()\n\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put('/users/profile', user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\n\nexport const getUsers = () => async(dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LIST_REQUEST })\n    const { token } = getState().userLogin\n    const config = {\n      headers: {\n        'Content-Type': 'appliation/json',\n        Authorization: `Bearer ${token}`\n      }\n    }\n    const { data } = await axios.get('/users', config)\n    dispatch({ \n      type: USER_LIST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}